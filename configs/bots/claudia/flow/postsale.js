// configs/bots/claudia/flow/postsale.js
// P√≥s-venda da Cl√°udia (pagamento confirmado, confirma√ß√£o de pedido, dicas r√°pidas e cupom opcional)

import { settings } from '../../../../src/core/settings.js';
import { setStage } from '../../../../src/core/fsm.js';

/**
 * Regras de neg√≥cio (lidas do settings.yaml):
 * - messages.postsale_pre_coupon: linhas enviadas imediatamente ap√≥s confirma√ß√£o de pagamento
 * - product.coupon_post_payment_only: se true, cupom s√≥ aparece aqui no p√≥s-pagamento
 * - product.coupon_code: c√≥digo a ser inserido no template
 * - messages.postsale_after_payment_with_coupon: template(s) que ser√£o preenchidos com {{coupon_code}}
 * - messages.postsale_followup_days: dias at√© um lembrete de acompanhamento (somente texto informativo aqui)
 *
 * Observa√ß√£o:
 * - Este flow retorna **um √∫nico texto** (consolidado em 2‚Äì4 linhas), para evitar ‚Äúrajada‚Äù de bolhas.
 * - O link do checkout N√ÉO √© repetido aqui. √â s√≥ confirma√ß√£o + instru√ß√µes.
 */

function linesToText(lines = []) {
  return (lines || [])
    .map((l) => String(l || '').trim())
    .filter(Boolean)
    .join('\n');
}

export async function postsale({ userId, text, event = 'paid' }) {
  // marca est√°gio
  await setStage(userId, 'postsale');

  const msgs = [];
  const msgBlock = (settings?.messages || {});
  const product  = (settings?.product || {});

  // 1) pacote "pago com sucesso"
  const pre = Array.isArray(msgBlock.postsale_pre_coupon) ? msgBlock.postsale_pre_coupon : [];

  if (pre.length) {
    msgs.push(linesToText(pre));
  } else {
    // fallback curto e assertivo
    msgs.push(
      'Pagamento confirmado! üéâ Voc√™ receber√° mensagens pelo WhatsApp para agendar e acompanhar a entrega.',
      'Se pintar qualquer imprevisto com o hor√°rio, √© s√≥ avisar o entregador pelo pr√≥prio WhatsApp. üíö'
    );
  }

  // 2) cupom (apenas se configurado para aparecer ap√≥s pagamento)
  const canCoupon = !!product?.coupon_post_payment_only && !!product?.coupon_code;
  const tpl = (Array.isArray(msgBlock.postsale_after_payment_with_coupon) ? msgBlock.postsale_after_payment_with_coupon : [])
    .map((t) => String(t || '').replace(/\{\{coupon_code\}\}/g, String(product.coupon_code || '')))
    .filter((t) => t.trim());

  if (canCoupon && tpl.length) {
    msgs.push(tpl[0]); // 1 linha s√≥, pra ficar elegante
  }

  // 3) lembrete de acompanhamento (apenas informativo aqui)
  const days = Number(settings?.messages?.postsale_followup_days || 0);
  if (Number.isFinite(days) && days > 0) {
    msgs.push(`Daqui a ${days} dia${days > 1 ? 's' : ''} eu te mando um lembrete com dicas r√°pidas de aplica√ß√£o e manuten√ß√£o ‚ú®`);
  }

  // sa√≠da consolidada (2‚Äì4 linhas no total)
  return linesToText(msgs);
}

export default postsale;
